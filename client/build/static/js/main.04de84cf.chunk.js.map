{"version":3,"sources":["componentes/navBar/navBar.js","App.js","actions/index.js","reducer/index.js","store/index.js","reportWebVitals.js","index.js"],"names":["Navbar","App","props","className","path","component","GET_COUNTRIS","initialState","countries","store","createStore","state","action","type","payload","compose","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNACe,SAASA,IAEpB,OACI,8CCUOC,MARf,SAAaC,GACX,OACE,qBAAKC,UAAU,MAAf,SACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWL,O,+BCLlBM,G,MAAe,gBCD5B,IAAMC,EAAa,CACfC,UAAU,ICCd,IAEeC,EAFDC,aDEC,WAAkD,IAA7BC,EAA4B,uDAApBJ,EAAaK,EAAO,uCAChE,OAAGA,EAAOC,OAASP,EAER,2BAAIK,GAAX,IAAiBH,UAAUI,EAAOE,UAG/BH,ICR+BI,YAAQC,YAAgBC,OCO/CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAD,CAAUnB,MAAQA,EAAlB,SACE,cAAC,IAAMoB,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04de84cf.chunk.js","sourcesContent":["\r\nexport default function Navbar(){\r\n\r\n    return(\r\n        <h1>nav funcando</h1>\r\n    )\r\n};","import './App.css';\r\nimport { Route } from 'react-router-dom';\r\nimport Navbar from './componentes/navBar/navBar.js'\r\nimport React from 'react';\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n    <Route path=\"/\" component={Navbar} ></Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport axios from 'axios';\r\nimport {rutas } from './rutas';\r\n\r\nexport const GET_COUNTRIS = 'GET_COUNTRIS';\r\n\r\n\r\n\r\n\r\nexport function getCountris(){\r\n    return function(dispatch){\r\n        return axios.get(rutas.countries)\r\n        .then(result=>{\r\n                dispatch({\r\n                        type:GET_COUNTRIS,\r\n                        payload:result\r\n                })\r\n        })\r\n    }\r\n}","import {GET_COUNTRIS} from '../actions/index';\r\n\r\n\r\nconst initialState={\r\n    countries:[]\r\n};\r\n\r\nexport default function rootReducer(state = initialState,action){\r\nif(action.type === GET_COUNTRIS){\r\n\r\n    return {...state,countries:action.payload};\r\n}\r\n\r\nreturn state;\r\n}","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducer';\r\n\r\nconst store = createStore(rootReducer,compose(applyMiddleware(thunk)));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store ={store} >\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}